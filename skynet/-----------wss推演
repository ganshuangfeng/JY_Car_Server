------------------------------------------------------------------------------------------------------ 问题处理
房间组件系统 与 agent 的数据同步：
	agent 保存所有实体和组件的数据，并从房间同步数据到 agent , agent 负责同步到客户端

agent 与 客户端的通讯协议：
	agent对客户端的数据实现增量添加，客户端 面向数据编程。


*.设计理念：
	服务器和客户端公用部分逻辑代码，只是客户端需要加上表现系统，就可以表现了。
	服务器同步客户端，不用特别及时，可以0.1秒一次 同步客户端 之类的,但是 按60帧刷新的话，1/60，每0.1秒要再调 0.1 / (1/60) 次 update。
	服务器记录每帧的所有实体组件的数据，可以用来做回放。
	服务器和agent,客户端的数据同步，可以做成实体组件的数据的同步。

	房间

	实现单例组件(全场只有一个实例的组件)，用来存储 系统的中间全局状态()

------------------------------------------------------------------------------------------------------ 问题处理 ↑


---------------------------------------------------------------------------------------------------------------------------------------------
实体：
	1个存放系统 单例组件的实体
	n个玩家实体
		room_com                房间组件
		game_dis_com            游戏调度组件
		player_com
		money_com
		


	n个车实体
		map_item_com            地图元素标志 组件 (用于客户端创建 地图实体)
		car_com                 车标志 组件 (用于客户端 渲染纹理)

		move_com                移动组件
		owner_com               所属上级组件(属于哪个玩家 )
		move_drive_nor_com      移动驱动组件
		position_com            位置组件
		position_relation_com   位置关系组件
		
		hp_com                  血量
		
	n个道路实体
		map_item_com            地图元素标志 组件 (用于客户端创建 地图实体)
		road_com                道路标志 组件 (用于客户端 渲染纹理)
		position_com            位置组件

	n个技能实体
		map_item_com            地图元素标志 组件 (用于客户端创建 地图实体)
		position_com            位置组件
		position_relation_com   位置关系组件
		owner_com               所属上级组件( 属于哪个车 )
		skill_trigger_base_com  技能触发基础组件
		[
			skill_trigger_move_in_com  技能触发-进入区域 组件 
		]



调度系统，
	wait -> youmen -> moving  , wait权限的结束是由别人的 moving 权限的结束 , youmen权限的结束 是由固定的时间，moving的结束 必须是 车的运动的结束。

运动系统，
	
	
技能释放：
	技能释放：
	技能接收：
	技能作用：


	技能可以产生 多种效果，可以直接加某个值

buff系统
	生命周期组件； 这个组件控制着实体的 删除，
		基础生命周期组件
		buff释放n次组件
		持续时间组件，

	buff 的释放，是否可以起作用，这里使用FSM来管理，如果要相互作用的buff就可以在这里来决定 他们的 相互关系。(是丢掉新的，还是丢掉现在，还是替换，还是刷新,等等)

	buff 可以改变 n 个属性值。

	buff自身维持自身的逻辑，最终会 调用一个 buff系统的 apply 函数，需要在指定的时机(比如刚获得这个buff时，每隔一定时间，)调用这个函数；这个函数中需要改变对应属性值时，需要调用一个buff的赋值系统，传入一个回调函数才操作。
		buff的赋值系统会自己决定什么时候调用这个回调函数，具体在什么时候调用，要根据这个buff相对于这个属性值的优先级来决定，优先级越低的先执行它的赋值操作，

		这个回调函数会处理一个传入的值，并返回这个要处理的值。



	每一个属性值，对应的buff系统的附加的值有，基础值，实时值，是否可修改值开关，是否可加值开关，是否可减值开关，叠加效率。
		建议 属性底层提供 加，减，乘，除的接口。




------------------------------------------------------------------------------------------------- 
操作 队列?

主动，被动 技能系统。

buffer 系统。


-------------------------------------------------------------------------------------------------  
调度系统

点了油门，设置要移动好多格，服务器一口气算完，向客户端同步过程数据 和 结果数据。
同步消息机制：
	客户端请求之后，将 改变过程list 和 最终结果 同步客户端。
		改变过程list ：
			某格 : Entity -> com 的改变
			某格 : Entity -> com 的改变

		最终结果: 
			全部的改变的 实体组件数据 。


技能 & 被动技能(buff=被动技能)
	技能要操作的事：
		加技能；
		操作数值
		属性修改器
		用属性修改器
		状态修改()

附加：流程


-----------------------------------------------------------------------------------------------------------
房间状态：
	wait_p        等待玩家匹配
	ready		  准备
	running       运行
	game_over     游戏结束

游戏中轮转 油门 权限：

游戏中车状态：
	油门
	运动
	三选一



------------------------------------------------------------
_d 加 game_center  数据中心

改造消息通知 , o

调度系统，不用类 , x

加一个 车的调度控制系统，监听 车 的轮次开始，处理不同的开始轮次逻辑 （根据配置，数据，处理轮次开始逻辑）


car_main = N   event    


player_op = 
run = true
	cc
main_slot  event
 
car_mian_logic
	{	
			nor
			change_game_round

	}



cc   esc	

xuanyun
jiaxue


event_list( dite , nor , back )



***** 把 car_dis_sys 也抽象成被动技能？

-----------------------------------------------------------------------------------------------------

------- 技能 
生命周期  (永久，触发 n 次(一个触发点一次) , 持续n轮(你动一下算一轮，我动一下也只算一轮)  )  ->
触发点 (xxx 触发消息，xxx触发消息的条件检查)  ->  
工作条件判断 (随机概率，xxx条件)  -> 
技能受众   (技能拥有者，技能释放者，敌方阵营全部，选择敌方阵营某个(要选择) ，己方全部，己方某个(要选择) ) ->  
做什么事   ->  
添加 处理单元  ( 或 特殊逻辑 () )



-------   举例
技能 拥有者 是 玩家信息对象

每个玩家有一个 player_dis_skill,
生命周期： 永久
触发点: 技能所在对象 的 seat_num 值 等于 round_start(轮次开始)  消息的参数  seat_num
触发条件判断：无
技能受众：技能拥有者
做什么事：添加一个 nor_op 处理单元，传入参数 (技能受众)
nor_op : 

---------------------------------- 道路上的技能，只是run_obj,地图系统帮我们做了  一部分技能的 事，
比如 技能的  生命周期，接收者，前置条件，...

--- 每个 run_obj应该都有 自己的名字

?? 问题，如果地图帮我们做了一部分技能的 事，那么它得管理  这个 run_obj 要作用给哪些具体对象(一些路上的run_obj要作用在自己的车身上，也可能作用于别人的车上)


---------------------------------- buff 就是 修改 属性的，不含血量。 buff应该都有名字


